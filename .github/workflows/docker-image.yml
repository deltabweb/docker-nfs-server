name: Create and publish Docker image

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_CLI_EXPERIMENTAL: enabled

jobs:
  # test:
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       PLATFORM: [linux/amd64,linux/arm64,linux/ppc64le,linux/386,linux/arm/v7,linux/arm/v6]

  #   steps:
  #     - name: docker install
  #       run: curl -fsSL get.docker.com | sh

  #     - name: source checkout
  #       uses: actions/checkout@v1

  #     - name: qemu register
  #       run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

  #     - name: buildx create
  #       run: docker buildx create --use --driver docker-container

  #     - name: image build
  #       run: docker buildx build . --pull --platform ${{ matrix.PLATFORM }} --tag ${GITHUB_REPOSITORY} --load

  #     - name: image test
  #       run: |
  #         sudo modprobe nfs
  #         sudo modprobe nfsd
  #         docker run --rm -d --name nfs-server -v "$(mktemp -d):/srv/nfs/tmp" --privileged -e NFS_EXPORT_0='/srv/nfs/tmp  *(ro,no_subtree_check)' ${GITHUB_REPOSITORY}
  #         sleep 5

  #       #
  #       #  docker logs nfs-server | tee /dev/stderr | grep -q "READY AND WAITING FOR NFS CLIENT CONNECTIONS"
  #       #  docker stop nfs-server
  
  # deploy:
  #   if: github.event_name != 'pull_request'
  #   needs: test
  #   runs-on: ubuntu-latest

  #   steps:
  #     # - name: set BUILD_DATE
  #     #   run: echo "::set-env name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

  #     # - name: set VCS_REF
  #     #   run: echo "::set-env name=VCS_REF::$(git describe --tags --always --dirty)"

  #     - name: docker install
  #       run: curl -fsSL get.docker.com | sh

  #     - name: source checkout
  #       uses: actions/checkout@v1

  #     # - name: github login
  #     #   run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u "${GITHUB_ACTOR}" --password-stdin

  #     - name: Log in to the Container registry
  #       uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: qemu register
  #       run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

  #     - name: buildx create
  #       run: docker buildx create --use --driver docker-container

  #     - name: manifest build
  #       run: >-
  #           docker buildx build . --pull --push
  #           --platform=linux/amd64,linux/arm64,linux/ppc64le,linux/386,linux/arm/v7,linux/arm/v6
  #           --label "org.opencontainers.image.version=${BUILD_VERSION}"
  #           --label "org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
  #           --label "org.opencontainers.image.revision=$(git describe --tags --always --dirty)"
  #     # - name: dockerhub description
  #     #   uses: peter-evans/dockerhub-description@v2.1.0
  #     #   env:
  #     #     DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  #     #     DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  #     #     DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}


  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        # uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        # uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        # uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}